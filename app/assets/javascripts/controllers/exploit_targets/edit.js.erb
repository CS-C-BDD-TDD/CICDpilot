app.controller('ExploitTargetsEditController', ['$scope','$routeParams','$location','$rootScope','Restangular','Marking', 'exploitTargetService', 
  function ($scope, $routeParams, $location, $rootScope, Restangular,Marking, exploitTargetService) {

    if (exploitTargetService.is_data_set()){
      $scope.exploit_target = exploitTargetService.get_data();
      $rootScope.breadcrumbs = [{text:'Home',link:'#/',icon:'fa-home'},
                                  {text:'All Exploit Targets',link:'#/exploit_targets',icon:'fa-list'},
                                  {text:$scope.exploit_target.stix_id,link:'#/exploit_targets/'+encodeURIComponent($scope.exploit_target.stix_id),icon:'fa-pencil'}];
    } else {
      Restangular.one("/exploit_targets/"+$routeParams.id).get().then(function(data){
        $scope.exploit_target = Marking.translate_existing_attributes(data);
        $rootScope.breadcrumbs = [{text:'Home',link:'#/',icon:'fa-home'},
                                  {text:'All Exploit Targets',link:'#/exploit_targets',icon:'fa-list'},
                                  {text:data.stix_id,link:'#/exploit_targets/'+encodeURIComponent(data.stix_id),icon:'fa-pencil'}];

      });
    }
    
    $scope.save = function(exploit_target,done){
      var package_stix_ids=_.map(exploit_target.stix_packages,function(i) {
        return i.stix_id;
      });
      
       var coa_ids=_.map(exploit_target.course_of_actions,function(i) {
        return i.stix_id;
      });
      
      var vulnerability_ids=_.map(exploit_target.vulnerabilities,function(i) {
        return i.guid;
      });
      
      exploit_target.stix_package_stix_ids=package_stix_ids;
      exploit_target.vulnerability_guids = vulnerability_ids;
      exploit_target.course_of_action_stix_ids = coa_ids;
     
      exploit_target.id = exploit_target.stix_id;
      Restangular.one("exploit_targets/"+$routeParams.id).customPUT(exploit_target).then(function(data){
        toastr.success("Exploit Target saved");
        $scope.exploit_target = data;
        $location.path('/exploit_targets/'+encodeURIComponent($scope.exploit_target.stix_id));
      },function(res){
        toastr.error("Unable to save Exploit Target");
        if (angular.isDefined(res.data) && angular.isDefined(res.data.errors) && angular.isDefined(res.data.errors.base)) {
            _.each(res.data.errors.base,function(e){
                toastr.error(e);
            });
        }
        $scope.exploit_target.errors = res.data.errors;
      });
      done();
    };
}]);
