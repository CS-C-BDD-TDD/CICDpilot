<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

app.directive('exploitTargetTable', function() {
  return {
    restrict: 'E',
    templateUrl: function(elem,attrs) {
      return attrs.indexpage ? '<%=asset_path("exploit_targets/advanced_table.html",type: :template)%>' :
                               '<%=asset_path("exploit_targets/table.html",type: :template)%>';
    },
    scope: {
             exploitTargets: '=?',
             metadata: '=?',
             showTable: '@',
             search: '=?',
             fetching: '=?'
           },
    controller: ['$scope', 'Restangular', '$rootScope', function($scope,Restangular,$rootScope) {
      $scope.can = $rootScope.can;
      $scope.date_picker_opts = {
        defaultRanges: true
      };
      $scope.q = '';
      $scope.marking_search_params = {};

      if (angular.isUndefined($scope.offset)) {
        $scope.offset=0;
      }
      if (angular.isUndefined($scope.amount)) {
        $scope.amount=$rootScope.setting_value('DEFAULT_MAX_RECORDS');
      }
      $scope.sortOptions = {
        'stix_id': 'desc',
        'created_at': 'desc',
        'updated_at': 'desc'
      };
      $scope.sortMethod = '';

      // Cleanup
      $scope.$on('$destroy', function() {
        $('.daterangepicker').remove();
      });
      
      $scope.dateRangePicker = function(picker) {
        $scope.date_picker_object = picker;
        $scope.offset=0;
        $scope.getExploitTargets($scope.offset);
      };

      $scope.$watch("search", function(search) {
        if (angular.isDefined(search)) {
          $scope.q = search;
          $scope.getExploitTargets($scope.offset);
        }
      });

      $scope.sort = function(method) {
        $scope.sortMethod = method;
        $scope.sortOptions[method]=($scope.sortOptions[method]=='desc')?'asc':'desc';
        $scope.offset=0;
        $scope.getExploitTargets($scope.offset);
      };

      $scope.startSearch = function() {
        $scope.offset=0;
        $scope.getExploitTargets($scope.offset);
      };

      $scope.getExploitTargets = function(offset) {
        if (angular.isDefined($scope.metadata)) {
          delete($scope.metadata);
        }
        $scope.showTable = false;
        $scope.fetching= true;
        Restangular.one("exploit_targets").get({
          ebt: angular.isDefined($scope.date_picker_object) ? $scope.date_picker_object.getStartDate() : '',
          iet: angular.isDefined($scope.date_picker_object) ? $scope.date_picker_object.getEndDate() : '',
          q: $scope.q,
          column: $scope.sortMethod,
          direction: $scope.sortOptions[$scope.sortMethod],
          amount: $scope.amount,
          offset: offset,
          marking_search_params: $scope.marking_search_params
        }).then(
          function(data){
            $scope.exploitTargets = data.exploit_targets;
            $scope.metadata = data.metadata;
            if (data.metadata['total_count']>0) {
              $scope.showTable = true;
            }
            $scope.fetching= false;
          },
          function(res){
            $scope.exploitTargets = null;
            $scope.metadata={total_count: 0};
            toastr.error("Unable to load Exploit Targets");
            $scope.fetching= false;
          }
        );
      };
      
      $scope.buildHref = function() {
      	return $rootScope.buildCSVHref($scope, "exploit_targets");
      };
    }]
  };
});
