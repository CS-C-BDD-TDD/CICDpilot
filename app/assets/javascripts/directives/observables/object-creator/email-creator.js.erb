<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

app.directive('emailCreator', function(){
  return {
    restrict: 'E',
    templateUrl: '<%=asset_path("observables/emails/new.html",type: :template)%>',
    scope: {
      emails: '=',
      linkAnObservable: '=',
      linkObservableView: '=',
      observables: '='
    },
    controller: ['$scope', '$rootScope', 'Gfi', function($scope,$rootScope,
                                                         Gfi) {
      $scope.cancelCreateObservable = function() {
          if (angular.isDefined($scope.email)) {
              delete $scope.email;
          }
          $scope.email={links:[], subject_condition: "Equals"};
          $scope.linkObservableView="link";
      };


      $scope.$watch('linkObservableView',function(newval,oldval) {
          if (newval == 'create') {
              if (angular.isDefined($scope.email)) {
                  delete $scope.email;
              }
              $scope.email = {init: true, links:[], subject_condition: "Equals"};
              Gfi.init_gfi_edit($scope, $scope.email);
          }
      });

      $scope.saved = function(email){
          var new_observable={};
          new_observable.remote_object_id = email.cybox_object_id;
          new_observable.remote_object_type = 'EmailMessage';
          $scope.linkAnObservable(new_observable,function(result) {
            if (result) {
              toastr.success('Observable successfully linked');
              result.email_message=email;
              $scope.observables.push(result);
              Gfi.delete_errors_on_gfiable_observables($scope);
              $scope.linkObservableView="current";
            } else {
              toastr.error('Linking of observable failed');
              $scope.linkObservableView="link";
            }
          });
      };
    }],
    controllerAs: 'emailCreateCtrl'
  }
});
