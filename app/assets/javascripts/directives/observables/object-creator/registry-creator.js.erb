<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

app.directive('registryCreator', function(){
  return {
    restrict: 'E',
    templateUrl: '<%=asset_path("observables/registries/new.html",type: :template)%>',
    scope: {
      registries: '=',
      linkAnObservable: '=',
      linkObservableView: '=',
      observables: '='
    },
    controller: ['$scope','Restangular','Observable', function($scope,Restangular,Observable) {
      // init values to show in form
      $scope.registry={hive_condition: "Equals"};
      $scope.registry.registry_values_attributes = [];
      $scope.registry.registry_values_attributes[0] = {};
      $scope.registry.registry_values_attributes[0].reg_name = '';
      $scope.registry.registry_values_attributes[0].reg_value = '';
      $scope.registry.registry_values_attributes[0].data_condition = 'Equals';

      $scope.Observable=Observable;
      $scope.cancelCreateObservable = function() {
        clear_entries();
        $scope.linkObservableView="link";
      };

      $scope.$watch('linkObservableView',function(newval,oldval) {
        if (newval == 'create') {
          if (angular.isDefined($scope.registry)) {
            delete $scope.registry;
          }
          $scope.registry = {
            init: true,
            hive_condition: "Equals",
            registry_values_attributes: [
              {
                reg_name: '',
                reg_value: '',
                data_condition: "Equals"
              }
            ]
          };
        }
      });

      $scope.saved = function(registry){
          var new_observable={};
          new_observable.remote_object_id = registry.cybox_object_id;
          new_observable.remote_object_type = 'Registry';
          $scope.linkAnObservable(new_observable,function(result) {
            if (result) {
              toastr.success('Observable successfully linked');
              result.registry=registry;
              $scope.observables.push(result);
              clear_entries();
              $scope.linkObservableView="current";
            } else {
              toastr.error('Linking of observable failed');
              $scope.linkObservableView="link";
            }
          });
      };
      clear_entries=function() {
        $scope.registry.hive='HKEY_CLASSES_ROOT';
        $scope.registry.key=undefined;
        $scope.registry.registry_values_attributes=[
                                                     {reg_name: '', reg_value: ''},
                                                   ];
        $scope.error={};
      };
    }],
    controllerAs: 'registryCreateCtrl'
  }
});
