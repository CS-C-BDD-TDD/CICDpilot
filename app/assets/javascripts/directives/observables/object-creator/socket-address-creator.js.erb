<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

app.directive('socketAddressCreator', function(){
  return {
    restrict: 'E',
    templateUrl: '<%=asset_path("observables/socket_addresses/new.html",type: :template)%>',
    scope: {
      socketAddresses: '=',
      linkAnObservable: '=',
      linkObservableView: '=',
      observables: '='
    },
    controller: ['$scope','Restangular', '$rootScope', 'Gfi',
      function($scope,Restangular,$rootScope,Gfi) {
      $scope.cancelCreateObservable = function() {
          if (angular.isDefined($scope.socket_address)) {
              delete $scope.socket_address;
          }
          $scope.linkObservableView="link";
      };

      $scope.$watch('linkObservableView',function(newval,oldval) {
            if (newval == 'create') {
                if (angular.isDefined($scope.socket_address)) {
                    delete $scope.socket_address;
                }
                $scope.socket_address = {init: true};
                $scope.socket_address.addresses = [];
                $scope.socket_address.hostnames = [];
                $scope.socket_address.ports = [];
            }
      });

      $scope.saved = function(socket_address){
          var new_observable={};
          new_observable.remote_object_id = socket_address.cybox_object_id;
          new_observable.remote_object_type = 'SocketAddress';
          $scope.linkAnObservable(new_observable,function(result) {
            if (result) {
              toastr.success('Observable successfully linked');
              result.socket_address=socket_address;
              $scope.observables.push(result);
              delete $scope.error;
              $scope.linkObservableView="current";
            } else {
              toastr.error('Linking of observable failed');
              $scope.linkObservableView="link";
            }
          });

      }
    }],
    controllerAs: 'socketAddressCreateCtrl'
  }
});
