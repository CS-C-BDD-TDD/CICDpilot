<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

app.directive('dnsQueryCreator', function(){
  return {
    restrict: 'E',
    templateUrl: '<%=asset_path("observables/dns_queries/new.html",type: :template)%>',
    scope: {
      dnsQueries: '=',
      linkAnObservable: '=',
      linkObservableView: '=',
      observables: '='
    },
    controller: ['$scope','Restangular','Observable', '$rootScope', 'Gfi',
      function($scope,Restangular,Observable,$rootScope,Gfi) {
      $scope.Observable=Observable;
      $scope.cancelCreateObservable = function() {
        if (angular.isDefined($scope.dns_query)) {
          delete $scope.dns_query;
          $scope.dns_query={resource_records: [], questions: []};
        }
        $scope.linkObservableView="link";
      };

      $scope.$watch('linkObservableView',function(newval,oldval) {
        if (newval == 'create') {
          if (angular.isDefined($scope.dns_query)) {
            delete $scope.dns_query;
          }
          $scope.dns_query={init: true, resource_records: [], questions: []};
          Gfi.init_gfi_edit($scope, $scope.dns_query);
        }
      });

      $scope.saved = function(dns_query) {
        var new_observable={};
        new_observable.remote_object_id = dns_query.cybox_object_id;
        new_observable.remote_object_type = 'DnsQuery';
        $scope.linkAnObservable(new_observable,function(result) {
          if (result) {
            toastr.success('Observable successfully linked');
            result.dns_query=dns_query;
            $scope.observables.push(result);
            Gfi.delete_errors_on_gfiable_observables($scope);
            $scope.linkObservableView="current";
          } else {
            toastr.error('Linking of observable failed');
            $scope.linkObservableView="link";
          }
        });
      };
    }],
    controllerAs: 'dnsQueryCreateCtrl'
  }
});
