<% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %>

app.directive('packageTable', function() {
  return {
    restrict: 'E',
    templateUrl: function(elem,attrs) {
      return attrs.indexpage ? '<%=asset_path("packages/advanced_table.html",type: :template)%>' :
                               '<%=asset_path("packages/table.html",type: :template)%>';
    },
    scope: {
             packages: '=?',
             metadata: '=?',
             fromUploads: '@',
             showTable: '@',
             search: '=?',
             fetching: '=?',
             mainsearch: '='
           },
    controller: ['$scope', 'Restangular', '$rootScope', function($scope,Restangular,$rootScope) {
      $scope.can = $rootScope.can;
      $scope.q = '';
      $scope.short_desc_q = '';
      $scope.title_q = '';
      $scope.created_by_q = '';
      $scope.marking_search_params = {};
      
      // Cleanup
      $scope.$on('$destroy', function() {
        $('.daterangepicker').remove();
      });
      
      $scope.date_picker_opts_created = {
        defaultRanges: true
      };

      $scope.date_picker_opts_updated = {
        defaultRanges: true
      };

      if (angular.isUndefined($scope.offset)) {
        $scope.offset=0;
      }
      if (angular.isUndefined($scope.amount)) {
        $scope.amount=$rootScope.setting_value('DEFAULT_MAX_RECORDS');
      }
      $scope.sortOptions = {
        'title': 'desc',
        'username': 'desc',
        'short_description': 'desc',
        'created_at': 'desc'
      };
      $scope.sortMethod = '';

      $scope.dateRangePickerCreated = function(picker) {
        $scope.date_picker_object_created = picker;
        $scope.offset=0;
        $scope.getPackages($scope.offset);
      };

      $scope.dateRangePickerUpdated = function(picker) {
        $scope.date_picker_object_updated = picker;
        $scope.offset=0;
        $scope.getPackages($scope.offset);
      };

      $scope.$watch("search", function(search) {
        if (angular.isDefined(search)) {
          $scope.q = search;
          $scope.getPackages($scope.offset);
        }
      });

      $scope.sort = function(method) {
        $scope.sortMethod = method;
        $scope.sortOptions[method]=($scope.sortOptions[method]=='desc')?'asc':'desc';
        $scope.offset=0;
        $scope.getPackages($scope.offset);
      };

      $scope.startSearch = function() {
        $scope.offset=0;
        $scope.getPackages($scope.offset);
      };

      $scope.getPackages = function(offset) {
        if (angular.isDefined($scope.metadata)) {
          delete($scope.metadata);
        }
        $scope.showTable = false;
        $scope.fetching= true;
        Restangular.one("stix_packages").get({
          created_ebt: angular.isDefined($scope.date_picker_object_created) ? $scope.date_picker_object_created.getStartDate() : '',
          created_iet: angular.isDefined($scope.date_picker_object_created) ? $scope.date_picker_object_created.getEndDate() : '',
          updated_ebt: angular.isDefined($scope.date_picker_object_updated) ? $scope.date_picker_object_updated.getStartDate() : '',
          updated_iet: angular.isDefined($scope.date_picker_object_updated) ? $scope.date_picker_object_updated.getEndDate() : '',
          q: $scope.q,
          title_q: $scope.title_q,
          created_by_q: $scope.created_by_q,
          updated_by_q: $scope.updated_by_q,
          short_desc_q: $scope.short_desc_q,
          column: $scope.sortMethod,
          direction: $scope.sortOptions[$scope.sortMethod],
          amount: $scope.amount,
          offset: offset,
          mainsearch: $scope.mainsearch,
          marking_search_params: $scope.marking_search_params
        }).then(
          function(data){
            $scope.packages = data.stix_packages;
            $scope.metadata = data.metadata;
            if (data.metadata['total_count']>0) {
              $scope.showTable = true;
            }
            $scope.fetching= false;
          },
          function(res){
            $scope.packages = null;
            $scope.metadata={total_count: 0};
            toastr.error("Unable to load Packages");
            $scope.fetching= false;
          }
        );
      };

      $scope.clearFilters = function(){
        // clear the search boxes
        $scope.title_q = '';
        $scope.created_by_q = '';
        $scope.short_desc_q = '';
        $scope.q = '';

        $scope.sortMethod = '';

        // clear the date range picker if it is set
        if (angular.isDefined($scope.date_picker_object_created) && typeof($scope.date_picker_object_created.clickClear) != "undefined"){
          $scope.date_picker_object_created.clickClear();
        }

        // clear the date range picker if it is set
        if (angular.isDefined($scope.date_picker_object_updated) && typeof($scope.date_picker_object_updated.clickClear) != "undefined"){
          $scope.date_picker_object_updated.clickClear();
        }

        $scope.date_picker_object_created = {
          startDate: null,
          endDate: null,
          getStartDate: function() { return ''; },
          getEndDate: function() { return ''; }
        };

        $scope.date_picker_object_updated = {
          startDate: null,
          endDate: null,
          getStartDate: function() { return ''; },
          getEndDate: function() { return ''; }
        };
        
        $scope.marking_search_params = {};

        $scope.startSearch();
      }
      
      $scope.searchMarkings = function() {
      	console.log('Entered Search Markings');
      }
      
      $scope.buildHref = function() {
        return $rootScope.buildCSVHref($scope, "stix_packages");
      };
    }]
  };
});
