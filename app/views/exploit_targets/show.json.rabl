object @exploit_target

attributes :stix_id,
           :created_at,
           :updated_at,
           :guid,
           :acs_set_id,
           :portion_marking,
           :read_only,
           :is_ciscp,
           :is_mifr,
		   :feeds

child :stix_packages => 'stix_packages' do
  extends "stix_packages/index.json.rabl", locals: {associations: locals[:associations]}
end if (locals['exploit_target'] || locals[:associations][:stix_packages]) && locals[:associations][:stix_packages] != 'none'

child :vulnerabilities => 'vulnerabilities' do
  extends "vulnerabilities/index.json.rabl", locals: {associations: locals[:associations]}
end if (locals['exploit_target'] || locals[:associations][:vulnerabilities]) && locals[:associations][:vulnerabilities] != 'none'

child :course_of_actions => 'course_of_actions' do
  extends "course_of_actions/index.json.rabl", locals: {associations: locals[:associations]}
end if (locals['exploit_target'] || locals[:associations][:course_of_actions]) && locals[:associations][:course_of_actions] != 'none'

child :ttps => 'ttps' do
  extends "ttps/index.json.rabl", locals: {associations: locals[:associations]}
end if (locals['exploit_target'] || locals[:associations][:ttps]) && locals[:associations][:ttps] != 'none'

child :audits => 'audits' do
  extends "audits/index", locals: {associations: locals[:associations]}
end if (locals['exploit_target'] || locals[:associations][:audits]) && locals[:associations][:audits] != 'none'

child created_by_user: 'created_by_user' do |user|
  # need organization association on show
  extends "users/show", locals: {object: user, associations: locals[:associations]}
end if (locals['exploit_target'] || locals[:associations][:created_by_user]) && locals[:associations][:created_by_user] != 'none'

node :stix_markings do |exploit_target|
  stix_markings = exploit_target.stix_markings.to_a
  stix_markings += exploit_target.acs_set.stix_markings if exploit_target.acs_set.present?
  partial 'stix_markings/index.json.rabl', object: stix_markings
end if (locals['exploit_target'] || locals[:associations][:stix_markings]) && locals[:associations][:stix_markings] != 'none'

node :acs_set do |exploit_target|
  acs_set = exploit_target.acs_set
  {name: acs_set.name,id: acs_set.id, portion_marking: acs_set.portion_marking} if acs_set.present?
end if (locals['exploit_target'] || locals[:associations][:acs_set]) && locals[:associations][:acs_set] != 'none'
