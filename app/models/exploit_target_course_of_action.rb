class ExploitTargetCourseOfAction < ActiveRecord::Base

  self.table_name = "exploit_target_coas"

  belongs_to :exploit_target, primary_key: :stix_id, foreign_key: :stix_exploit_target_id, touch: true
  belongs_to :course_of_action, primary_key: :stix_id, foreign_key: :stix_course_of_action_id, touch: true
  
  alias_attribute :obj, :course_of_action
  alias_attribute :parent, :exploit_target

  include Guidable
  include Ingestible
  include LinkingTableCommon
  include Transferable
  
  attr_reader :is_upload

  def self.ingest(uploader, coa, parent = nil)
    x = ExploitTargetCourseOfAction.new
    x.stix_course_of_action_id = coa.respond_to?(:stix_id) ? coa.stix_id : coa.to_s
    x.stix_exploit_target_id = parent.stix_id unless parent.nil?
    x
  end

  def is_upload
	  if @is_upload.nil?
		  false
	  else
		  @is_upload
	  end
  end

end
