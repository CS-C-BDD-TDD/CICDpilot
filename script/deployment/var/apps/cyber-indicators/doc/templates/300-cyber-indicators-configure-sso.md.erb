# Configure SSO using Active Directory

<%if ENV['NOTE']%>
!Note! If you are setting up this server for ICAM authentication, this section can be completely skipped. Go to the section labelled **Configure SSO using ICAM Authentication**
<%end%>

Before you begin, you will require:

* Credentials for an Active Directory service account.
* Credentials for an Active Directory user account.
* Access to a Windows workstation that is a member of Active Directory.  This workstation should not be an Active Directory server.
* FQDN of the Cyber Indicators application server.
* FQDN of an Active Directory Domain Controller.
* FQDN of your Active Directory Domain.
* Access to a Domain Administrator account capable of running the "Set Service Principal" (setspn.exe) command within Windows AD.
* Access to an Active Directory server with the "setspn.exe" command installed.
* Access to an Active Directory server with the "ktpass.exe" command installed.

Verify:

* Name resolution of the Cyber Indicators application server FQDN.
* Time synchronization between the Cyber Indicators application server and the Active Directory domain.

<%if ENV['NOTE']%>
!Note! The default service account name is "tomcat.svc".  You may use any service account name that is valid within Active Directory.  If you use a different service account name, you will need to adjust configurations to reflect this new name.
<%end%>

## Overview

You will configure SSO piecewise.  The reason that you will configure this in pieces is that SSO configuration can be complicated.  Often times, the issues surrounding SSO configuration are due to some minor misconfiguration or incorrectly typed piece of information.  Piecewise configuration of SSO will allow you to avoid these pitfalls.

You will:

* Register a service principal within Active Directory.
* Configure Kerberos.
* Authenticate to active directory with this service principal and password using Kerberos.
* Verify that this service principal can be used for application authentication.
* Generate a Kerberos keytab file for this service principal.
* Authenticate to active directory with this service principal and keytab.
* Verify that this service principal and keytab can be used for appliction authentication.
* Configure the Cyber Indicators application to use this service principal and keytab.

## Configure the Service Principal

Before you begin, you will require:

* Access to a Domain Administrator capable of running the "Set Service Principal" (setspn.exe) command within Windows AD.
* FQDN of the Cyber Indicators application server.
* Credentials for an Active Directory service account.

<%if ENV['NOTE']%>
!Note!  This section is accomplished on a Windows workstation or server within the Active Directory domain that you are configuring Single Sign On.

!Note!  The default service account name is "tomcat.svc".  You may use any service account name that is valid within Active Directory.  If you use a different service account name, you will need to adjust configurations to reflect this new name.
<%end%>

Log in to Windows Active Directory with an account capable of running the "Set Service Principal" command.

**Launch a Windows Command Prompt as an Administrator.**

Verify that the Service Account does not have any Service Principal registrations.

```cmd
C:\>setspn.exe -L [SERVICE_ACCOUNT_NAME]
Registered ServicePrincipalNames for CN=SERVICE ACCOUNT NAME,CN=Users,DC=domain,DC=com:
```

<%if ENV['NOTE']%>
!Note! You should see that there are no registered Service Principal Names.

!Note! Replace SERVICE_ACCOUNT_NAME with the service principal account login name.
<%end%>

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Setspn.exe -L "Could not find the Account"

Please verify the account information for the service account that you were given.

If this account does not exist, or the information you were provided is incorrect, then you will not find the account.
<%end%>

**Verify that the application server is not registered with any service principals.**

```cmd
C:\>setspn -Q */[APPLICATION_SERVER_FQDN]
Checking domain DC=domain,DC=com

No such SPN found.
```

<%if ENV['NOTE']%>
!Note! Replace the [APPLICATION_SERVER_FQDN] with the fully qualified domain name of the application server.  For example, if the application server is applicationserver.domain.com, then replace [APPLICATION_SERVER_FQDN] with applicationserver.domain.com.

!Note! If there are alternate URLs used to access the application server, repeat this command replacing the [APPLICATION_SERVER_FQDN] with the alternate URL.  For example, if applicationserver is also used to refer to the application server within the domain, then replace [APPLICATION_SERVER_FQDN] with applicationserver.

!Note! All queries should return "No such SPN found".
<%end%>

**Register the application server service principal.**

```cmd
C:\>setspn -A HTTP/[APPLICATION_SERVER_FQDN] [DOMAIN]\[SERVICE_ACCOUNT_NAME]
Registering ServicePrincipalNames for CN=service account name,CN=Users,DC=domain,DC=com
        HTTP/[APPLICATION_SERVER_FQDN]
Updated object
```

<%if ENV['NOTE']%>
!Note! Replace the [APPLICATION_SERVER_FQDN] with the fully qualified domain name of the application server.  For example, if the application server is applicationserver.domain.com, then replace [APPLICATION_SERVER_FQDN] with applicationserver.domain.com.

!Note! Replace SERVICE_ACCOUNT_NAME with the service principal account login name.

!Note! If there are alternate URLs used to access the application server, repeat this command replacing the [APPLICATION_SERVER_FQDN] with the alternate URL.  For example, if applicationserver is also used to refer to the application server within the domain, then replace [APPLICATION_SERVER_FQDN] with applicationserver.
<%end%>

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Failed to assign SPN on account 'CN=docker03 svc,CN=Users,DC=unobtanium,DC=us-cert,DC=gov', error 0x2098/8344 -> Insufficient access rights to perform the operation. when registring the SPN.

*Run the Windows Command Prompt "as administrator".*

```
(Click) Start Menu->(Right Click) Command Prompt->(Click) "Run as administrator"

You will be prompted with a "User Account Control" window:

"Do you want to allow the following program to make changes to this computer?"

Review the program name, and verify:

Program name: Windows Command Processor
Verified publisher: Microsoft Windows

Click Yes if this information is verified.  Click No if this information is not verified.
```

The command prompt, when run as administrator, has special privileges that allow you to interact with Active Directory.
<%end%>

**Log out of Windows.**

## Configure Kerberos.

Before you begin, you will need the following:

* FQDN of your Active Directory Domain.
* FQDN of an Active Directory Domain Controller.
* Credentials for an Active Directory service account.

**Initialize the Kerberos Configuration file.**

```bash
FQDN_DOMAIN=[FQDN_DOMAIN] \
FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER=[FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER] \
/var/apps/cyber-indicators/bin/initialize-kerberos-configuration
```
<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Run the task
```bash
FQDN_DOMAIN=[FQDN_DOMAIN] \
FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER=[FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER] \
OUTFILE=/usr/share/tomcat7/conf/krb5.conf \
TEMPLATE=/etc/cyber-indicators/templates/etc/cyber-indicators/tomcat7/conf/krb5.conf.erb \
/var/apps/cyber-indicators/bin/rake db:template:create
```
<%end%>

**Initialize the Kerberos Login Configuration file.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] /var/apps/cyber-indicators/bin/initialize-login-configuration
```

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Run the task
```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME]
OUTFILE=/usr/share/tomcat7/conf/login.conf \
TEMPLATE=/etc/cyber-indicators/templates/etc/cyber-indicators/tomcat7/conf/login.conf.erb \
/var/apps/cyber-indicators/bin/rake db:template:create
```
<%end%>

<%if ENV['NOTE']%>
!Note! The ordering of arguments does not matter.

!Note! Replace the FQDN_DOMAIN with the FQDN of your Active Directory Domain.

!Note! Replace the FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER with the FQDN of an Active Directory Domain Controller.
<%end%>

<%if ENV['EXAMPLE']%>
!Example! Generating the Kerberos Configuration file:

```bash
FQDN_DOMAIN=DOMAIN.COM FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER=adc.domain.com /var/apps/cyber-indicators/bin/initialize-kerberos-configuration
```

<%if ENV['NOTE']%>
!Important! The value for FQDN_DOMAIN must be in uppercase.
<%end%>

<%end%>

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Edit the Kerberos Configuration file.

```
/usr/share/tomcat7/conf/krb5.conf
```

```bash
[libdefaults]
        default_realm = [FQDN_DOMAIN]
  default_tkt_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
  default_tgs_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
  permitted_enctypes   = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc

[realms]
  [FQDN_DOMAIN] = {
    kdc = [FQDN_KERBEROS_KDC]
    default_domain = [FQDN_DOMAIN]
}

[domain_realm]
  .[FQDN_DOMAIN] = [FQDN_DOMAIN]
```

!Note! Replace [FQDN_DOMAIN] with the fully qualified domain name of your domain.  Enter this information in capital letters.

!Note! Replace [FQDN_KERBEROS_KDC] with the fully qualified domain name of our Kerberos Key Distribution Center.  This is typically a Windows Active Directory Server.  Enter this information in lower-cased letters.

!Example! Here is an example of a complete krb5.conf file:

```bash
[libdefaults]
        default_realm = DOMAIN.COM
  default_tkt_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
  default_tgs_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
  permitted_enctypes   = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc

[realms]
  DOMAIN.COM = {
    kdc = activedirectory.domain.com
    default_domain = DOMAIN.COM
}

[domain_realm]
  .DOMAIN.COM = DOMAIN.COM
```
<%end%>

<%if ENV['DEVELOPER_NOTE']%>
## [Developer Note] Vim Substitute [FQDN_DOMAIN] and [FQDN_KERBEROS_KDC]

:%s/\[FQDN_DOMAIN\]/UNOBTANIUM\.US-CERT\.GOV/g
:%s/\[FQDN_KERBEROS_KDC\]/activedirectory\.unobtanium\.us-cert\.gov/g
<%end%>

**Generate the Kerberos login configuration file.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] /var/apps/cyber-indicators/bin/initialize-login-configuration
```

## Authenticate to Kerberos using HelloKDC

Before you begin, you will need:

* Credentials for an Active Directory service account.

**Initialize HelloKDC.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] \
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] \
/var/apps/cyber-indicators/bin/initialize-hellokdc
```

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Run the task.

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] \
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] \
OUTFILE=/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKDC/config.properties \
TEMPLATE=/etc/cyber-indicators/templates//usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKDC/config.properties.erb \
/var/apps/cyber-indicators/bin/rake db:template:create
```
<%end%>

<%if ENV['NOTE']%>
!Note! Replace [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] with the Service Account username that you created.  If you are following the default configuration, then this is tomcat.svc.

!Note! Replace the [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] with the password for the Service Account that you created.
<%end%>

**Connect to Kerberos.**

```bash
/var/apps/cyber-indicators/bin/connect-to-kerberos-hellokdc
```

You should see "Connection test successful."

<%if ENV['NOTE']%>
!Note! This means that the Service Principal is registered correctly, and that the networking, DNS, and Time Synchronization is configured correctly for the application server.

!Note! This also means that the krb5.conf and login.conf files are configured correctly.
<%end%>

**Remove the username and password information from the HelloKDC properties file.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD="" /var/apps/cyber-indicators/bin/initialize-hellokdc
```

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: Message stream modified (41) when running HelloKDC or HelloKeytab

Known causes:

* The entry for FQDN_DOMAIN, when generating the Kerberos configuration is either incorrect or printed in lower case.

Corrective action:

* Regenerate the Kerberos configuration file, ensure that the FQDN_DOMAIN value is capitalized.

## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: Operation not permitted when running HelloKDC or HelloKeytab

Known causes:

* The application server's firewall is blocking communication to the Kerberos infrastructure.

Corrective action:

* Turn off the application server's firewall.
* Repeat the process to connect to Kerberos.
* Enable communication over the ports specified in the documentation.

## [Troubleshooting] Exception in thread "main" java.lang.SecurityException: Configuration Error: when running HelloKDC or HelloKeytab

The configuration file login.conf is configured incorrectly.

**Re-initialize the Kerberos Configuration file.**

```bash
FQDN_DOMAIN=[FQDN_DOMAIN] \
FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER=[FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER] \
/var/apps/cyber-indicators/bin/initialize-kerberos-configuration
```

**Re-initialize the Kerberos Login Configuration file.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] /var/apps/cyber-indicators/bin/initialize-login-configuration
```

**Re-initialize HelloKDC.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] \
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] \
/var/apps/cyber-indicators/bin/initialize-hellokdc
```

**Review the configuration.**

The login configuration file is located here:

```bash
/usr/share/tomcat7/conf/login.conf
```

If necessary, manually configure this file.

## [Troubleshooting] Exception in thread "main" java.lang.IllegalArgumentException: Must provide a username

You have not configured the HelloKDC config.properties file.

**Re-initialize the Kerberos Configuration file.**

```bash
FQDN_DOMAIN=[FQDN_DOMAIN] \
FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER=[FQDN_ACTIVE_DIRECTORY_DOMAIN_CONTROLLER] \
/var/apps/cyber-indicators/bin/initialize-kerberos-configuration
```

**Re-initialize the Kerberos Login Configuration file.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] /var/apps/cyber-indicators/bin/initialize-login-configuration
```

**Re-initialize HelloKDC.**

```bash
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] \
ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] \
/var/apps/cyber-indicators/bin/initialize-hellokdc
```

**Review the configuration.**

The login configuration file is located here:

```bash
/usr/share/tomcat7/conf/login.conf
```

If necessary, manually configure this file.

## [Troubleshooting] Configure HelloKDC.

**Edit the properties file.**

```bash
/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKDC/config.properties
```

The properties file looks like this:

```bash
config.preauthUsername = [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME]
config.preauthPassword = [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD]
config.krb5Conf = [PATH_TO_KRB5_CONF_FILE]
config.loginConf = [PATH_TO_LOGIN_CONF_FILE]
config.loginModule = active-directory-client
```

<%if ENV['NOTE']%>
!Note! Replace the ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME with the service account created when configuring the Service Account Principal.  This should be tomcat.svc.

!Note! Replace the ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD with the password for the Service Account Principal that you previously created.

!Note! Replace PATH_TO_KRB5_CONF_FILE with the path to the krb5.conf file you previously configured.  This should be /usr/share/tomcat7/conf/krb5.conf.

!Note! Replace PATH_TO_LOGIN_CONF_FILE with the path to the login.conf file you previously configured.  This should be /usr/share/tomcat7/conf/login.conf.

!Note! There is no need to change the loginModule.

!Note! You should not quote the values that you enter.  For example, config.preauthUsername = tomcat.svc is correct, where config.preauthUsername = "tomcat.svc" is incorrect.
<%end%>

## [Troubleshooting] Manually connect to Kerberos

```bash
pushd /usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKDC/
  $JAVA_HOME/bin/java -jar HelloKDC.jar
popd
```

## [Troubleshooting] Manually remove the username and password from the HelloKDC properties file.
```
/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKDC/config.properties
```

The properties file looks like this:

```bash
config.preauthUsername = [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME]
config.preauthPassword = [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD]
config.krb5Conf = [PATH_TO_KRB5_CONF_FILE]
config.loginConf = [PATH_TO_LOGIN_CONF_FILE]
config.loginModule = active-directory-client
```

Remove the values that you set for ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME and ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD.

<%end%>

## Authenticate to Kerberos using HelloKeytab

Before you begin, you will need:

* Access to a Windows workstation that is a member of Active Directory.  This workstation should not be an Active Directory server.
* Access to an Domain Administrator account capable of running the "Set Service Principal" (setspn.exe) command within Windows AD.
* Access to an Active Directory server with the "setspn.exe" command installed.
* Access to an Active Directory server with the "ktpass.exe" command installed.

<%if ENV['NOTE']%>
!Note!  This section is accomplished on a Windows workstation or server within the Active Directory domain that you are configuring Single Sign On.

!Note!  The "ktpass.exe" tool is provided in the Windows Server toolkit.
<%end%>

*Log in to the Windows Active Directory server that has "setspn.exe" and "ktpass.exe" installed on it as the Domain Administrator capable of running these commands.*

**Launch a Windows Command Prompt as an Administrator.**

**Create the Kerberos Keytab.**

```bash
ktpass /out cyber-indicators.keytab
       /princ [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME]@[DOMAIN_FQDN]
       /pass [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD]
       /ptype KRB5_NT_PRINCIPAL
```

<%if ENV['NOTE']%>
!Note! Replace [APPLICATION_SERVER_FQDN] with the Fully Qualified Domain Name for the application server.

!Note! Replace [DOMAIN_FQDN] with fully-qualified domain name.

!Note! Replace [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] with the username of the service account.

!Note! Replace [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] with the service account password.

<%end%>

<%if ENV['EXAMPLE']%>
!Example! Given an APPLICATION_SERVER_FQDN = server.domain.com, DOMAIN = DOMAIN.COM, ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME = tomcat.svc, and ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD = P@ssw0rd!

```bash
ktpass /out cyber-indicators.keytab^
       /princ tomcat.svc@DOMAIN.COM^
       /pass P@ssw0rd!^
       /ptype KRB5_NT_PRINCIPAL
```

<%end%>

**Copy the Kerberos Keytab file to the application server.**

**Log out of the Windows Active Directory server.**

<%if ENV['NOTE']%>
!Note! You no longer need to be logged in to the Windows Active Directory server.
<%end%>

**Move the Kerberos Keytab on the Application Server.**

Move the keytab file to this location:

```
/usr/share/tomcat7/conf/cyber-indicators.keytab
```

**Initialize HelloKeytab**

```bash
APPLICATION_SERVER_URL=[APPLICATION_SERVER_URL] /var/apps/cyber-indicators/bin/initialize-hellokeytab
```

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Run the task.

```bash
APPLICATION_SERVER_URL=[APPLICATION_SERVER_URL] \
OUTFILE=/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab/config.properties \
TEMPLATE=/etc/cyber-indicators/templates//usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab/config.properties.erb \
/var/apps/cyber-indicators/bin/rake db:template:create
```
<%end%>

<%if ENV['NOTE']%>
!Note! Replace APPLICATION_SERVER_URL with the full URL that users will use to access the application.  For example, if the cyber-indicators application will be accessed via https://www.server.com:8443/cyber-indicators, then you should enter https://www.server.com:8443/cyber-indicators as the APPLICATION_SERVER_URL.
<%end%>

**Connect to Kerberos.**

```bash
/var/apps/cyber-indicators/bin/connect-to-kerberos-hellokeytab
```
A lot of information will be generated.  If you do not see any exceptions generated, then you have successfully authenticated against Active Directory using the keytab file that you generated.  Your keytab file is valid.

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: null (68)

The Kerberos krb5.conf file is configured incorrectly.

The Domain FQDN is specified incorrectly in the krb5.conf file.

Reconfigure the Kerberos configuration file.

## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: Clock skew too great (37)

The time between your application server and the active directory server is out-of-sync.

Synchronize the time.

## [Troubleshooting] Manually Authenticate to Kerberos via HelloKeytab

```bash
pushd /usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab
  $JAVA_HOME/bin/java -cp ".:/var/apps/cyber-indicators/lib/spnego-r7.jar" HelloKeytab
popd
```
A lot of information will be generated.  If you do not see any exceptions generated, then you have successfully authenticated against Active Directory using the keytab file that you generated.  Your keytab file is valid.

## [Troubleshooting] Manually Configure the HelloKeytab Properties File.

**Configure HelloKeytab properties file.**

```
/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab/config.properties
```

The properties file looks like this:

```bash
config.krb5Conf = [PATH_TO_KRB5_CONF_FILE]
config.loginConf = [PATH_TO_LOGIN_CONF_FILE]
config.loginModule = active-directory
config.applicationServerURL = [APPLICATION_SERVER_URL]
```

<%if ENV['NOTE']%>
!Note! Replace PATH_TO_KRB5_CONF_FILE with the path to the krb5.conf file you previously configured.  This should be /usr/share/tomcat7/conf/krb5.conf.

!Note! Replace PATH_TO_LOGIN_CONF_FILE with the path to the login.conf file you previously configured.  This should be /usr/share/tomcat7/conf/login.conf.

!Note! Replace APPLICATION_SERVER_URL with the full URL that users will use to access the application.  For example, if the cyber-indicators application will be accessed via https://www.server.com:8443/cyber-indicators, then you should enter https://www.server.com:8443/cyber-indicators as the APPLICATION_SERVER_URL.
<%end%>

## [Troubleshooting] Compile HelloKeytab.java

```bash
$JAVA_HOME/bin/javac -cp '.:/var/apps/cyber-indicators/lib/spnego-r7.jar' \
/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab/HelloKeytab.java
```

## [Troubleshooting] Enable network debug mode

```bash
pushd /usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab
  $JAVA_HOME/bin/java -cp '.:/var/apps/cyber-indicators/lib/spnego-r7.jar' -Djavax.net.debug=all HelloKeytab
popd
```

## [Troubleshooting] KrbException: Server not found in Kerberos database

This is a general error, and is generally caused by the following:

* Not registing the service principal name.
* Incorrect DNS configuration.
* The SPN you are trying to create is already registered.

Re-register the SPN.  Ensure that you register the SPN using a Windows Command Processor "ran as an administrator".

Verify DNS configuration.  Verify that you are able to resolve both the Domain short-name and fully-qualified domain name for the application server.

### [Troubleshooting] Exception in thread "main" java.net.ConnectException: Connection refused

The entry for the applicationServerURL in the Keytab config.properties file is incorrect.

Verify that you can actually access this URL without this utility over HTTPS.

Verify that you are using the correct URL, such as the application server DNS entry and port combination.

Verify that the application services are running.

### [Troubleshooting] Exception in thread "main" javax.net.ssl.SSLHandshakeException

SSL Trust is not properly configured for your java environment.

Reconfigure SSL trust, and verify that your application server is configured to trust the SSL certificate.

## [Troubleshooting] Exception in thread "main" javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target

The Java truststore is not properly linked to the application.

Create the primary and local SSL certificates in $JAVA_HOME/jre/lib/security/cacerts.

Copy $JAVA_HOME/jre/lib/security/cacerts to /usr/share/tomcat7/keystore/.

## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: No CallbackHandler available to garner authentication information from the user

This error means that the application that you are using is unable to use Kerberos for promptless login, hence "garner" authentication information.

This is essentially saying that there is no Java handler to prompt the user or service for a password, and so Java is reporting the exception.

The Keytab file is missing or incorrectly generated.

  Verify SPN registration, and regenerate the Keytab.

The krb5.conf file is incorrect.

The login.conf file is incorrect, or referring to an incorrect keytab.

When troubleshooting HelloKeytab:

  The applicationURL may be incorrect.

  Ensure that the web service at the applicationURL is running.

  If the applicationURL is the same server you are working on, make sure that server.xml is not configured to use ActiveDirectory.

Regenerate the keytab file.

You may use debugging utilities, such as "ktutil" and "klist" to verify the integrity of the keytab file.

Discussion of these utilities is out-of-scope from this document.

## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: No CallbackHandler available to garner authentication information from the user

This is a specific manifestation of the "javax.security.auth.login.LoginException".  When executing the HelloKeytab utility, this error occurs very early on in execution.

```bash
>>>KinitOptions cache name is /tmp/krb5cc_0
>>> KeyTabInputStream, readName(): DOMAIN
>>> KeyTabInputStream, readName(): USERNAME
>>> KeyTab: load() entry length: 58; type: 23
Ordering keys wrt default_tkt_enctypes list
default etypes for default_tkt_enctypes: 17 23 16 3 1.
Exception in thread "main" javax.security.auth.login.LoginException: No CallbackHandler available to garner authentication information from the user
```

Verify that the DOMAIN and USERNAME (visible in the KeyTabInputStream) match the USERNAME@DOMAIN in the generated keytab, and in the Kerberos configuration file.

```bash
cat /usr/share/tomcat7/conf/krb5.conf
[libdefaults]
  default_realm = DOMAIN.COM
  default_tkt_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
  default_tgs_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
  permitted_enctypes   = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc

[realms]
  DOMAIN.COM = {
    kdc = activedirectory.domain.com
    default_domain = DOMAIN.COM
}

[domain_realm]
  .DOMAIN.COM = DOMAIN.COM
```

In the example above, notice that DOMAIN.COM does not match DOMAIN.

### [Developer Note] Verify that the DOMAIN and USERNAME match the USERNAME@DOMAIN in the generated keytab and in the Kerberos configuration file.

Install Kerberos v5 utilities.

```bash
yum -y install krb5-workstation
```

View the keytab.

```bash
ktutil
ktutil:  rkt /usr/share/tomcat7/conf/cyber-indicators.keytab
ktutil:  list
slot KVNO Principal
---- ---- ---------------------------------------------------------------------
   1    0     USERNAME@DOMAIN
```

## [Troubleshooting] Exception in thread "main" java.net.ConnectException: Connection refused

The utility is not able to connect to the applicationURL provided in the configuration file.

Verify the application URL in the configuration file.

```bash
/usr/share/tomcat7/webapps/cyber-indicators/WEB-INF/script/sso/var/apps/sso/HelloKeytab/config.properties
```
<%end%>

<%if ENV['OPTIONAL']%>
## [Optional] Start the Application Using Preauthentication

This configuration starts the application using the Service Account Name and Password that you previously validated with HelloKDC.

The application has fully-functional Single Sign On deployed using this strategy.

This deployment option is a good test in verifying that Single Sign On works, or if you suspect that the Kerberos Keytab that you generated is corrupt.

Edit the Tomcat Server configuration.

```
/usr/share/tomcat7/conf/server.xml
```

Locate the Application Context.

The Application Context looks like this:

```xml
  <Context docBase="cyber-indicators" path="/cyber-indicators" reloadable="true">
    <!--
          <Valve className="indicators.cyber.valves.BlackList"
                 disallowedHeaders="REMOTE_USER|AUTH_MODE|REMOTE_USER_GUID"/>
          <Valve className="indicators.cyber.valves.ActiveDirectory"
                 krb5Conf="/usr/share/tomcat7/conf/krb5.conf"
                 loginConf="/usr/share/tomcat7/conf/login.conf"
                 loginModule="active-directory"
                 />
    -->
  </Context>
```

Replace the Context with this:

```xml
    <Context docBase="cyber-indicators" path="/cyber-indicators" reloadable="true">
      <Valve className="indicators.cyber.valves.BlackList"
             disallowedHeaders="REMOTE_USER|AUTH_MODE|REMOTE_USER_GUID"/>
      <Valve className="indicators.cyber.valves.ActiveDirectory"
             krb5Conf="/usr/share/tomcat7/conf/krb5.conf"
             loginConf="/usr/share/tomcat7/conf/login.conf"
             loginModule="spnego-preauth"
             preauthUsername=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME]
             preauthPassword=[ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD]
             />
    </Context>
```

!Note! Replace the [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME] with the name of the service account username.  This should be tomcat.svc.

!Note! Replace the [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD] with the service account password.

Restart the Application.

```bash
service cyber-indicators restart
```

Browse to the application.

Log in to a workstation in the Windows Active Directory Domain as the user account created in "Bootstrap the application"
<%end%>

## Configure the Application to use the Keytab

**Initialize the web server with Kerberos.**

```bash
/var/apps/cyber-indicators/bin/initialize-application-webserver-with-kerberos
```

<%if ENV['TROUBLESHOOTING']%>
## [Troubleshooting] Run the task.
```bash
KERBEROS_KEYTAB=true \
TEMPLATE=/etc/cyber-indicators/templates/etc/cyber-indicators/tomcat7/conf/server.xml.erb \
OUTFILE=/usr/share/tomcat7/conf/server.xml /var/apps/cyber-indicators/bin/rake \
db:template:create
```
<%end%>

<%if ENV['DEVELOPER_NOTE']%>
## [Developer Note] Manually Configure Basic Auth

Edit this file:

```bash
/usr/share/tomcat7/conf/server.xml
```

Restore the Application Context so that it looks like this:

```xml
  <Context docBase="cyber-indicators" path="/cyber-indicators" reloadable="true">
    <!--
      <Valve className="indicators.cyber.valves.BlackList"
             disallowedHeaders="REMOTE_USER|AUTH_MODE|REMOTE_USER_GUID"/>
      <Valve className="indicators.cyber.valves.ActiveDirectory"
             krb5Conf="/usr/share/tomcat7/conf/krb5.conf"
             loginConf="/usr/share/tomcat7/conf/login.conf"
             loginModule="active-directory"
             />
      -->
  </Context>
```

Edit this file:

```
/etc/cyber-indicators/config/settings.yml
```

Change the SSO_AD setting.

```
SSO_AD=false
```

Edit this file:

```
/etc/cyber-indicators/config/authenticators.yml
```

Remove the ActiveDirectory authenticator and replace it with a Basic Authenticator.

```yaml
production:
  - Auth::Provider::API
  - Auth::Provider::Basic
```

Restart the Application.

```bash
service cyber-indicators restart
```

You will now be presented with a login screen, and ActiveDirectory-based authentication is disabled.
<%end%>

<%if ENV['TROUBLESHOOTING']%>

## [Troubleshooting] Manually Configure the Application to use the Keytab

Edit the Tomcat server configuration file.

```
/usr/share/tomcat7/conf/server.xml
```

Locate the Application Context.

The Application Context looks like this:

```xml
  <Context docBase="cyber-indicators" path="/cyber-indicators" reloadable="true">
    <!--
      <Valve className="indicators.cyber.valves.BlackList"
             disallowedHeaders="REMOTE_USER|AUTH_MODE|REMOTE_USER_GUID"/>
      <Valve className="indicators.cyber.valves.ActiveDirectory"
             krb5Conf="/usr/share/tomcat7/conf/krb5.conf"
             loginConf="/usr/share/tomcat7/conf/login.conf"
             loginModule="active-directory"
             />
    -->
  </Context>
```

Replace the Context with this:

```xml
    <Context docBase="cyber-indicators" path="/cyber-indicators" reloadable="true">
      <Valve className="indicators.cyber.valves.BlackList"
             disallowedHeaders="REMOTE_USER|AUTH_MODE|REMOTE_USER_GUID"/>
      <Valve className="indicators.cyber.valves.ActiveDirectory"
             krb5Conf="/usr/share/tomcat7/conf/krb5.conf"
             loginConf="/usr/share/tomcat7/conf/login.conf"
             loginModule="active-directory"
             />
    </Context>
```

## [Troubleshooting] The browser displays "KrbException: Specified version of key is not available (44)"

This issue is caused by recreating or resetting the Service Account used for Kerberos.

Recreate the keytab and specify the "kvno" number:

```bash
ktpass /out cyber-indicators.keytab
       /princ [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_USERNAME]@[DOMAIN]
       /pass [ACTIVE_DIRECTORY_SERVICE_ACCOUNT_PASSWORD]
       /ptype KRB5_NT_PRINCIPAL
       /kvno 0
```

## [Troubleshooting] Application Log: Java::JavaSql::SQLRecoverableException (IO Error: could not resolve the connect identifier  "[IDENTIFIER]"):

IDENTIFIER may be any string, and usually matches the name of the database that you are trying to connect to.

Verify that the path to TNS_ADMIN, as shown in /var/log/cyber-indicators/env-production.log, exists, and that the tnsnames.ora file exists.

Verify that the operating system tomcat user can access the tnsnames.ora file.

Verify that the /etc/cyber-indicators/conf/database.yml file exists and is configured correctly.

```bash
chmod 740 /etc/tnsnames.ora
chown root:tomcat /etc/tnsnames.ora
service cyber-indicators restart
```

## [Troubleshooting] SEVERE: A child container failed during start java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost]. StandardContext[/cyber-indicators]] in the catalina log.

This error means that the Valve components cannot start.

This is the result of an incorrect valve configuration.

Verify that the valves are correctly configured, and that the file locations and settings can be referenced by the valve and the tomcat user.

Verify that the login.conf file has an active-directory-client stanza configured.

Verify that the login.conf file has an stanza configured for the loginModule defined in server.xml.  If no loginModule is defined, ensure that an active-directory stanza exists.

```bash
active-directory {
  ...
};

active-directory-client {
  ...
};
```

## [Troubleshooting] Configuring Browser Trust

When accessing the Kerberized Cyber Indicators Application, you will be presented with a login and password dialog if your browser is not configured to trust the Cyber Indicators application.

### Internet Explorer:

Internet Explorer, used within the same Active Directory Domain is already configured to pass credentials for Cyber Indicators Single Sign On.

### Firefox:

The Firefox browser must be configured to pass Kerberos credentials.

In the browser bar, enter:  "about:config"

When warned about changing configuration settings, select "I'll be careful"

Search for "network.negotiate-auth.trusted-uris".

Double-click the Preference "network.negotiate-auth.trusted-uris".

Append the URL for the Cyber Indicators application.

!Note! You do not need to provide the full URL for this to function.  For example, an application server accessed via https://www.server.com:8443/some_path, you do not need to enter this full URL.  You may enter https://www.server.com, and trust will occurr on all ports and paths for this URL.

## [Troubleshooting] ORA-01882: timezone region not found in the localhost log.

After launching the application, if every page load gives you a "something went wrong" error, check the application log, under `/usr/share/tomcat7/logs/localhost.[timestamp].log`

If the page load stack trace error includes `ORA-01882: timezone region not found`, it may be because your timezone setting is corrupt.  The following can remedy this error

```bash
mv /etc/localtime /etc/localtime.old
ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime
service cyber-indicators restart
```

Change the time zone for the appropriate locale.

## [Troubleshooting] Errno::ECONNREFUSED: Connection refused - {:data=>"<?xml version=\"1.0\" encoding=\"UTF-8\"?><delete><query>type:Address</query></delete>", :headers=>{"Content-Type"=>"text/xml"}, :method=>:post, :params=>{:wt=>:ruby}, :query=>"wt=ruby", :path=>"update", :uri=>#<URI::HTTP:0x2ccddba7 URL:http://localhost:8080/solr/production/update?wt=ruby>, :open_timeout=>nil, :read_timeout=>nil, :retry_503=>nil, :retry_after_limit=>nil} in the localhost log, or on the console when trying to reindex.

Ensure that the /etc/sysconfig/cyber-indicators file has SSL_CERT and SOLR_URL set, and that the cert and URL are valid.

If using the Rake CLI to reindex, pass the SOLR_URL and SSL_CERT to the Rake task.

```bash
SOLR_URL=SOLR_FQDN SSL_CERT=PATH_TO_SSL_CERT /var/apps/cyber-indicators/bin/rake sunspot:solr:reindex
```

## [Troubleshooting] Exception in thread "main" javax.security.auth.login.LoginException: Pre-authentication information was invalid (24)

The Kerberos keytab was generated incorrectly.

Regenerate the keytab file, and ensure that you are entering all of the correct information.

## [Troubleshooting] ActiveRecord::ConnectionAdapters::OracleEnhancedConnectionException ("DESC EXAMPLE_DBADMIN_USERNAME.TABLE_NAME" failed; does it exist?) in the localhost log.

The application production database user does not have the privilege to view the table name.

This is the result of executing a migration, and then not executing the grant and synonym stored procedures.

Fix the permissions on the database for the production database user.

```bash
RAILS_ENV=dbadmin /var/apps/cyber-indicators/bin/rake db:grant
```

```bash
/var/apps/cyber-indicators/bin/rake db:synonyms
```

Restart the application.

```bash
service cyber-indicators restart
```

## [Troubleshooting] Receive "Invalid Request" after logging in to the application for the first time.

This can be caused by the application being out-of-sync with the database.

For example, a new version of the application was installed, data migrations were run, and the application was not restarted.

Stop the application.

```bash
service cyber-indicators stop
```

Synchronize the application.

```bash
/var/apps/cyber-indicators/sbin/synchronize-application
```

Restart the application.

```bash
service cyber-indicators start
```
<%end%>

# Configure SSO Using ICAM Authentication

In order to utilize ICAM Authentication, the WSO2 server needs to be configured to authenticate for CIAP.  Contact the ICAM team to handle this setup.

You will need 4 pieces of information to complete this configuration:

- The Issuer ID for your ICAM connection
- The IDP URL - This is the URL that is used to connect to the ICAM server
  - Example:  https://wso2-erb.sec.dte.cert.org/samlsso
- The hostname of the CIAP server
- The port that the CIAP server is running on (typically this is 8443)

## Set the server into ICAM Authentication mode
```bash
/var/apps/cyber-indicators/sbin/set-icam-authentication
```

## Set up the SAML properties file
```bash
ISSUER_ID=[ISSUER_ID] \
OUR_HOST=[HOSTNAME OF CIAP INSTANCE] \
OUR_PORT=[PORT NUMBER FOR CIAP INSTANCE] \
IDP_URL=[THE IDP URL PROVIDED BY ICAM TEAM] \
ENABLE_ASSERTION_SIGNING=[true OR false - PROVIDED BY ICAM TEAM] \
IDP_CERT_ALIAS=[THE CERT ALIAS PROVIDED BY ICAM TEAM] \
/var/apps/cyber-indicators/bin/initialize-saml-properties
```
